#version 330

out vec4 final_color;

in vec2 texc;
in vec3 normal;
in vec3 fragpos;

uniform vec3 ocolor;
uniform vec3 light;
uniform vec3 lightpos;
uniform vec3 viewpos;

uniform sampler2D te;
uniform sampler2D te1;
void main()
{
	float specul = 0.5;
	vec3 viewdir = normalize(viewpos-fragpos);

	vec3 lightdir = normalize(lightpos-fragpos);



	vec3 nor = normalize(normal);
	vec3 ref = reflect(-lightdir,nor);
	float spec = pow(max(dot(viewdir,ref),0.0),128);
	vec3 specular = specul*spec*light;

	float diff = max(dot(lightdir,nor),0.0);
	vec3 diffuse = diff*light;
	float ambient_strength = 0.1;
	vec3 ambient = ambient_strength*light;
	final_color = vec4(ocolor*(ambient+diffuse+specular),1.0f);
}